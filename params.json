{
  "name": "Shard",
  "tagline": "A command line tool to detect shared passwords",
  "body": "# shard\r\n\r\n[![Join the chat at https://gitter.im/philwantsfish/shard](https://badges.gitter.im/frohoff/ysoserial.svg)](https://gitter.im/philwantsfish/shard?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nA command line tool to detect shared passwords\r\n\r\n## Usage\r\n\r\nList options:\r\n\r\n```\r\nShard (1.5) can run in 3 modes:\r\n\r\n1) Single user single password          - Use -u and -p\r\n2) Single user multiple passwords       - Use -u and -f\r\n3) Multiple users and multple passwords - Use -f only\r\n\r\nFor more detailed usage examples see the wiki.\r\n    \r\nUsage: java -jar shard-1.5.jar [options]\r\n\r\n  -u, --username <value>  Username to test\r\n  -p, --password <value>  Password to test\r\n  -f, --file <value>      A path to a file containing a set of credentials or passwords\r\n  --format <value>        The format of the credentials. Must be a regular expression with 2 capture groups. The first capture group for the username and the second capture group for the password. Defaults to a regex that will match:\r\n        \"username\":\"password\"\r\n  -l, --list              List available modules\r\n  -v, --version           Print the version\r\n  --modules <value>       Only run specific modules. A comma separated list\r\n  --help                  Prints this usage text\r\n```\r\n\r\nList available modules:\r\n\r\n``` bash\r\n$ java -jar shard.jar -l\r\nAvailable modules:\r\n        Facebook\r\n        LinkedIn\r\n        Reddit\r\n        Twitter\r\n        Instagram\r\n        GitHub\r\n        BitBucket\r\n        Kijiji\r\n        DigitalOcean\r\n        Vimeo\r\n        Laposte\r\n        DailyMotion\r\n\r\n```\r\n\r\n\r\n## Examples\r\n\r\nGiven a username and password shard will attempt to authenticate with multiple sites:\r\n\r\n``` bash\r\n$ java -jar shard.jar -u username-here -p password-here\r\n21:16:25.950 [+] Running in single credential mode\r\n21:16:30.302 [+] username-here:password-here - Reddit, Instagram\r\n```\r\n\r\nTo test multiple credentials supply a filename. By default this expects one credential per line in the format `\"username\":\"password\"`. Custom formats can be supplied with the `--format` option\r\n\r\n```\r\n$ java -jar shard.jar -f /tmp/creds.txt\r\n21:16:39.501 [+] Running in multi-credential mode\r\n21:16:39.516 [+] Parsed 2 credentials\r\n21:16:42.794 [+] username1:password1 - Reddit, Instagram\r\n21:16:45.189 [+] username2:password2 - Facebook, LinkedIn, Twitter\r\n```\r\n\r\n## Installation\r\n\r\nGrab the latest release from the [release tab](https://github.com/philwantsfish/shard/releases), which was built as a fat jar using sbt assembly.\r\n\r\nor\r\n\r\nBuild it yourself using sbt, `sbt assembly`\r\n \r\n\r\n## Developing a new module\r\n\r\nAdding a new module is easy. Create a new class that inherits from `AbstractModule` in the module package and add the module to the `ModuleFactory`.\r\n\r\nThe AbstractModule has one abstract method:\r\n``` scala\r\n  def tryLogin(creds: Credentials): Boolean\r\n```\r\n\r\nThis method takes a Credentials object and returns a boolean indicating a successful login. I recommend using the TwitterModule as an template. For an indepth explanation of adding a new module see the [example on the wiki](https://github.com/philwantsfish/shard/wiki/Logging-into-Twitter-example)\r\n\r\nDependencies:\r\n- JSoup is used for HTTP communication and HTML parsing \r\n- spray-json is used for handling json\r\n\r\nIf Scala is not your thing check out the secondary_implementations, these are rewrites of shard in other languages. If you add a module to one of these implementations I will rewrite in Scala and add it to the main project as well.\r\n\r\n## Bugs, Requests, and Feedback\r\n\r\nContact me, join the [Gitter](https://gitter.im/philwantsfish/shard) room, or use this GitHub project\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}